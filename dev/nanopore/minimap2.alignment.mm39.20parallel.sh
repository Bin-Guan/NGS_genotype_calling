#!/bin/bash
#SBATCH -c62
#SBATCH --mem=200g
#SBATCH --gres=lscratch:300
#SBATCH --time=20:0:0

#The mouse data were finished for ~314 samples in 16 hours.
#for upto 500 fastq files

set -e
module load parallel minimap2/2.26 sambamba/0.8.2
sample=$1
mkdir -p temp_bam bam
find fastq_pass/ -type f -name "*fastq.gz" | parallel -j 20 -I% --max-args 1 --tag "minimap2 -a -x map-ont -Y -t 3 -R "@RG\\\\tLB:nisc\\\\tID:$sample\\\\tSM:$sample" /data/OGL/resources/genomes/mm39/genome.mmi % | sambamba sort -u --compression-level 6 --tmpdir=/lscratch/$SLURM_JOB_ID -t 3 -o %.bam <(sambamba view -S -f bam --compression-level 0 -t 3 /dev/stdin)"
#bam files generated in the fastq_pass folder
find fastq_pass/ -type f -name "*.bam" -exec mv {} temp_bam \;
find fastq_pass/ -type f -name "*.bam.bai" -exec mv {} temp_bam \;

ls temp_bam/*.bam > bam.list.txt
bam_file=""
while read -r line; do bam_file+=" $line"; done < $1

sambamba merge -t 48 bam/$1.bam $bam_file
ml mosdepth
mkdir -p mosdepth
cd mosdepth
mosdepth -t 48 --no-per-base --mapq 1 --fast-mode $1.md ../bam/$1.bam

#get the reads in specific regions only
#samtools view -b --threads 6 rico.hom.bam chr6:124700000-124800000 chr13:74700000-81130000 -o Eno2.chr13.bam --write-index

#The minimap2 index were generated by: cd /data/OGL/resources/genomes
#ln -s /fdb/genome/mm39/chr_all.fa mm39
#minimap2 -d genome.mmi chr_all.fa


#-x map-ont: saw secondary alignment. Did not see secondary alignment when -x map-ont not set previously. 